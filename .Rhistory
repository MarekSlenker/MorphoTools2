if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5,", dist, ")")))
}
}
hist(wieWIEA4_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4", xaxt='n', yaxt='n')
hist(wieWIEA5_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5", xaxt='n', yaxt='n')
wieWIEA5_sesterskeAlely
s["wieWIEA5-A1", "wieWIEA5-A2"]
s["wieWIEA5-B1", "wieWIEA5-B2"]
mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
for (sample in samples$V1) {
eval(parse(text=paste(sample, "_sesterskeAlely=numeric()", sep = "")))
}
wieWIEA4_sesterskeAlely
# WIE sestersle alely
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
eval(parse(text=paste("wieWIEA4_sesterskeAlely = c(wieWIEA4,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5,", dist, ")")))
}
}
dist = mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
wieWIEA5_sesterskeAlely
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
dd
# WIE sestersle alely
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
break
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
eval(parse(text=paste("wieWIEA4_sesterskeAlely = c(wieWIEA4,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5,", dist, ")")))
}
}
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
s["wieWIEA4-A1", "wieWIEA4-A2"]
s["wieWIEA4-B1", "wieWIEA4-B2"]
mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
for (sample in samples$V1) {
eval(parse(text=paste(sample, "_A_alely=numeric()", sep = "")))
}
s["wieWIEA4-A1", "wieWIEA4-A2"]
for (sample in samples$V1) {
eval(parse(text=paste(sample, "_sesterskeAlely=numeric()", sep = "")))
}
# WIE sestersle alely
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
eval(parse(text=paste("wieWIEA4_sesterskeAlely = c(wieWIEA4_sesterskeAlely,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5_sesterskeAlely,", dist, ")")))
}
}
hist(wieWIEA4_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4", xaxt='n', yaxt='n')
hist(wieWIEA5_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5", xaxt='n', yaxt='n')
s["wieWIEA5-A1", "wieWIEA5-A2"]
s["wieWIEA5-B1", "wieWIEA5-B2"]
# WIE sestersle alely
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
break
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
eval(parse(text=paste("wieWIEA4_sesterskeAlely = c(wieWIEA4_sesterskeAlely,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
)
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5_sesterskeAlely,", dist, ")")))
}
}
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
s["wieWIEA4-A1", "wieWIEA4-A2"]
s["wieWIEA4-B1", "wieWIEA4-B2"]
dist = mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
mean(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
)
s["wieWIEA4-A1", "wieWIEA4-A2"]
s["wieWIEA5-A1", "wieWIEA5-A2"]
s["wieWIEA5-B1", "wieWIEA5-B2"]
s["wieWIEA5-A1", "wieWIEA5-B2"]
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
par(mfrow=c(9, 3) )
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
hist(acraC019_103, breaks = seq(0, 0.05, 0.0005), main = "acraC019_103", xaxt='n', yaxt='n')
hist(ambC014_101, breaks = seq(0, 0.05, 0.0005), main = "ambC014_101", xaxt='n', yaxt='n')
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
par(mar=c(1,2,2,1))
par(mfrow=c(9, 3) )
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
hist(acraC019_103, breaks = seq(0, 0.05, 0.0005), main = "acraC019_103", xaxt='n', yaxt='n')
hist(ambC014_101, breaks = seq(0, 0.05, 0.0005), main = "ambC014_101", xaxt='n', yaxt='n')
hist(ammC029_102, breaks = seq(0, 0.05, 0.0005), main = "ammC029_102", xaxt='n', yaxt='n')
hist(apeQS4, breaks = seq(0, 0.05, 0.0005), main = "apeQS4", xaxt='n', yaxt='n')
hist(hirC062_106, breaks = seq(0, 0.05, 0.0005), main = "hirC062_106", xaxt='n', yaxt='n')
hist(hirC062_106, breaks = seq(0, 0.06, 0.0005), main = "hirC062_106", xaxt='n', yaxt='n')
hist(lazBEL12, breaks = seq(0, 0.05, 0.0005), main = "lazBEL12", xaxt='n', yaxt='n')
hist(lazGRB3, breaks = seq(0, 0.05, 0.0005), main = "lazGRB3", xaxt='n', yaxt='n')
hist(lazTRG2, breaks = seq(0, 0.05, 0.0005), main = "lazTRG2", xaxt='n', yaxt='n')
hist(lazTRNL3, breaks = seq(0, 0.05, 0.0005), main = "lazTRNL3", xaxt='n', yaxt='n')
hist(seiBES1, breaks = seq(0, 0.05, 0.0005), main = "seiBES1", xaxt='n', yaxt='n')
hist(seiKCA1, breaks = seq(0, 0.05, 0.0005), main = "seiKCA1", xaxt='n', yaxt='n')
hist(tenKU25, breaks = seq(0, 0.05, 0.0005), main = "tenKU25", xaxt='n', yaxt='n')
hist(ulIRCA1_2, breaks = seq(0, 0.05, 0.0005), main = "ulIRCA1_2", xaxt='n', yaxt='n')
hist(ulAM11_7, breaks = seq(0, 0.05, 0.0005), main = "ulAM11_7", xaxt='n', yaxt='n')
hist(ulAM2_2, breaks = seq(0, 0.05, 0.0005), main = "ulAM2_2", xaxt='n', yaxt='n')
hist(ulGRI2, breaks = seq(0, 0.05, 0.0005), main = "ulGRI2", xaxt='n', yaxt='n')
hist(ulTRH5, breaks = seq(0, 0.05, 0.0005), main = "ulTRH5", xaxt='n', yaxt='n')
hist(ulUD4, breaks = seq(0, 0.05, 0.0005), main = "ulUD4", xaxt='n', yaxt='n')
hist(triC060_107, breaks = seq(0, 0.05, 0.0005), main = "triC060_107", xaxt='n', yaxt='n')
hist(wieWIEA4, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4", xaxt='n', yaxt='n')
hist(wieWIEA5, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5", xaxt='n', yaxt='n')
hist(wieWIEA4_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4 sesterskeAlely", xaxt='n', yaxt='n')
hist(wieWIEA5_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5 sesterskeAlely", xaxt='n', yaxt='n')
hist(penSOZO8, breaks = seq(0, 0.05, 0.0005), main = "penSOZO8", xaxt='n', yaxt='n')
hist(penDEM7, breaks = seq(0, 0.05, 0.0005), main = "penDEM7", xaxt='n', yaxt='n')
hist(penBAH4, breaks = seq(0, 0.05, 0.0005), main = "penBAH4", xaxt='n', yaxt='n')
mean(1,2)
mean(1, 2)
mean(1, 2, trim = 0)
mean(1, 2, trim = 1)
mean(c(1, 2))
mean(c(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
))
mean(c(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
))
s["wieWIEA4-A1", "wieWIEA4-A2"]
s["wieWIEA4-B1", "wieWIEA4-B2"]
for (sample in samples$V1) {
eval(parse(text=paste(sample, "=numeric()")))
}
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(c(
s["wieWIEA4-A1", "wieWIEA4-B1"],
s["wieWIEA4-A1", "wieWIEA4-B2"],
s["wieWIEA4-A2", "wieWIEA4-B1"],
s["wieWIEA4-A2", "wieWIEA4-B2"]
))
eval(parse(text=paste("wieWIEA4 = c(wieWIEA4,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(c(
s["wieWIEA5-A1", "wieWIEA5-B1"],
s["wieWIEA5-A1", "wieWIEA5-B2"],
s["wieWIEA5-A2", "wieWIEA5-B1"],
s["wieWIEA5-A2", "wieWIEA5-B2"]
))
eval(parse(text=paste("wieWIEA5 = c(wieWIEA5,", dist, ")")))
}
}
for (sample in samples$V1) {
eval(parse(text=paste(sample, "_sesterskeAlely=numeric()", sep = "")))
}
# WIE sestersle alely
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
break
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(c(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
))
eval(parse(text=paste("wieWIEA4_sesterskeAlely = c(wieWIEA4_sesterskeAlely,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(c(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
))
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5_sesterskeAlely,", dist, ")")))
}
}
par(mar=c(1,2,2,1))
par(mfrow=c(9, 3) )
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
hist(acraC019_103, breaks = seq(0, 0.05, 0.0005), main = "acraC019_103", xaxt='n', yaxt='n')
hist(ambC014_101, breaks = seq(0, 0.05, 0.0005), main = "ambC014_101", xaxt='n', yaxt='n')
hist(ammC029_102, breaks = seq(0, 0.05, 0.0005), main = "ammC029_102", xaxt='n', yaxt='n')
hist(apeQS4, breaks = seq(0, 0.05, 0.0005), main = "apeQS4", xaxt='n', yaxt='n')
hist(hirC062_106, breaks = seq(0, 0.06, 0.0005), main = "hirC062_106", xaxt='n', yaxt='n')
hist(lazBEL12, breaks = seq(0, 0.05, 0.0005), main = "lazBEL12", xaxt='n', yaxt='n')
hist(lazGRB3, breaks = seq(0, 0.05, 0.0005), main = "lazGRB3", xaxt='n', yaxt='n')
hist(lazTRG2, breaks = seq(0, 0.05, 0.0005), main = "lazTRG2", xaxt='n', yaxt='n')
hist(lazTRNL3, breaks = seq(0, 0.05, 0.0005), main = "lazTRNL3", xaxt='n', yaxt='n')
hist(seiBES1, breaks = seq(0, 0.05, 0.0005), main = "seiBES1", xaxt='n', yaxt='n')
hist(seiKCA1, breaks = seq(0, 0.05, 0.0005), main = "seiKCA1", xaxt='n', yaxt='n')
hist(tenKU25, breaks = seq(0, 0.05, 0.0005), main = "tenKU25", xaxt='n', yaxt='n')
hist(ulIRCA1_2, breaks = seq(0, 0.05, 0.0005), main = "ulIRCA1_2", xaxt='n', yaxt='n')
hist(ulAM11_7, breaks = seq(0, 0.05, 0.0005), main = "ulAM11_7", xaxt='n', yaxt='n')
hist(ulAM2_2, breaks = seq(0, 0.05, 0.0005), main = "ulAM2_2", xaxt='n', yaxt='n')
hist(ulGRI2, breaks = seq(0, 0.05, 0.0005), main = "ulGRI2", xaxt='n', yaxt='n')
hist(ulTRH5, breaks = seq(0, 0.05, 0.0005), main = "ulTRH5", xaxt='n', yaxt='n')
hist(ulUD4, breaks = seq(0, 0.05, 0.0005), main = "ulUD4", xaxt='n', yaxt='n')
hist(triC060_107, breaks = seq(0, 0.05, 0.0005), main = "triC060_107", xaxt='n', yaxt='n')
hist(wieWIEA4, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4", xaxt='n', yaxt='n')
hist(wieWIEA5, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5", xaxt='n', yaxt='n')
hist(wieWIEA4_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4 sesterskeAlely", xaxt='n', yaxt='n')
hist(wieWIEA5_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5 sesterskeAlely", xaxt='n', yaxt='n')
hist(penSOZO8, breaks = seq(0, 0.05, 0.0005), main = "penSOZO8", xaxt='n', yaxt='n')
hist(penDEM7, breaks = seq(0, 0.05, 0.0005), main = "penDEM7", xaxt='n', yaxt='n')
hist(penBAH4, breaks = seq(0, 0.05, 0.0005), main = "penBAH4", xaxt='n', yaxt='n')
wieWIEA5_sesterskeAlely
# WIE sestersle alely
for (seq in list.files("./1000+/",pattern = ".fasta", full.names = T)) {
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
if ('wieWIEA4-A1' %in% row.names(dd)) {
dist = mean(c(
s["wieWIEA4-A1", "wieWIEA4-A2"],
s["wieWIEA4-B1", "wieWIEA4-B2"]
))
eval(parse(text=paste("wieWIEA4_sesterskeAlely = c(wieWIEA4_sesterskeAlely,", dist, ")")))
}
if ('wieWIEA5-A1' %in% row.names(dd)) {
dist = mean(c(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
))
eval(parse(text=paste("wieWIEA5_sesterskeAlely = c(wieWIEA5_sesterskeAlely,", dist, ")")))
}
}
hist(acraC015_107, breaks = seq(0, 0.05, 0.0005), main = "acraC015_107", xaxt='n', yaxt='n')
hist(acraC019_103, breaks = seq(0, 0.05, 0.0005), main = "acraC019_103", xaxt='n', yaxt='n')
hist(ambC014_101, breaks = seq(0, 0.05, 0.0005), main = "ambC014_101", xaxt='n', yaxt='n')
hist(ammC029_102, breaks = seq(0, 0.05, 0.0005), main = "ammC029_102", xaxt='n', yaxt='n')
hist(apeQS4, breaks = seq(0, 0.05, 0.0005), main = "apeQS4", xaxt='n', yaxt='n')
hist(hirC062_106, breaks = seq(0, 0.06, 0.0005), main = "hirC062_106", xaxt='n', yaxt='n')
hist(lazBEL12, breaks = seq(0, 0.05, 0.0005), main = "lazBEL12", xaxt='n', yaxt='n')
hist(lazGRB3, breaks = seq(0, 0.05, 0.0005), main = "lazGRB3", xaxt='n', yaxt='n')
hist(lazTRG2, breaks = seq(0, 0.05, 0.0005), main = "lazTRG2", xaxt='n', yaxt='n')
hist(lazTRNL3, breaks = seq(0, 0.05, 0.0005), main = "lazTRNL3", xaxt='n', yaxt='n')
hist(seiBES1, breaks = seq(0, 0.05, 0.0005), main = "seiBES1", xaxt='n', yaxt='n')
hist(seiKCA1, breaks = seq(0, 0.05, 0.0005), main = "seiKCA1", xaxt='n', yaxt='n')
hist(tenKU25, breaks = seq(0, 0.05, 0.0005), main = "tenKU25", xaxt='n', yaxt='n')
hist(ulIRCA1_2, breaks = seq(0, 0.05, 0.0005), main = "ulIRCA1_2", xaxt='n', yaxt='n')
hist(ulAM11_7, breaks = seq(0, 0.05, 0.0005), main = "ulAM11_7", xaxt='n', yaxt='n')
hist(ulAM2_2, breaks = seq(0, 0.05, 0.0005), main = "ulAM2_2", xaxt='n', yaxt='n')
hist(ulGRI2, breaks = seq(0, 0.05, 0.0005), main = "ulGRI2", xaxt='n', yaxt='n')
hist(ulTRH5, breaks = seq(0, 0.05, 0.0005), main = "ulTRH5", xaxt='n', yaxt='n')
hist(ulUD4, breaks = seq(0, 0.05, 0.0005), main = "ulUD4", xaxt='n', yaxt='n')
hist(triC060_107, breaks = seq(0, 0.05, 0.0005), main = "triC060_107", xaxt='n', yaxt='n')
hist(wieWIEA4, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4", xaxt='n', yaxt='n')
hist(wieWIEA5, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5", xaxt='n', yaxt='n')
hist(wieWIEA4_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA4 sesterskeAlely", xaxt='n', yaxt='n')
hist(wieWIEA5_sesterskeAlely, breaks = seq(0, 0.05, 0.0005), main = "wieWIEA5 sesterskeAlely", xaxt='n', yaxt='n')
hist(penSOZO8, breaks = seq(0, 0.05, 0.0005), main = "penSOZO8", xaxt='n', yaxt='n')
hist(penDEM7, breaks = seq(0, 0.05, 0.0005), main = "penDEM7", xaxt='n', yaxt='n')
hist(penBAH4, breaks = seq(0, 0.05, 0.0005), main = "penBAH4", xaxt='n', yaxt='n')
dd = read.dna(seq, format = "fasta")
s = dist.dna(dd, as.matrix = T)
s["wieWIEA4-A1", "wieWIEA4-B1"]
s["wieWIEA4-A1", "wieWIEA4-B2"]
s["wieWIEA4-A2", "wieWIEA4-B1"]
s["wieWIEA4-A2", "wieWIEA4-B2"]
s["wieWIEA4-A2", "wieWIEA4-B2"]
s["wieWIEA4-A2", "wieWIEA4-B2"]
s["wieWIEA4-A2", "wieWIEA4-B2"]
s["wieWIEA4-A2", "wieWIEA4-B2"]
s["wieWIEA5-A1", "wieWIEA5-B1"]
s["wieWIEA5-A1", "wieWIEA5-B2"]
s["wieWIEA5-A2", "wieWIEA5-B1"]
s["wieWIEA5-A2", "wieWIEA5-B2"]
mean(c(0,
s["wieWIEA5-A1", "wieWIEA5-B1"],
s["wieWIEA5-A1", "wieWIEA5-B2"],
s["wieWIEA5-A2", "wieWIEA5-B1"],
s["wieWIEA5-A2", "wieWIEA5-B2"]
))
mean(c(
s["wieWIEA5-A1", "wieWIEA5-B1"],
s["wieWIEA5-A1", "wieWIEA5-B2"],
s["wieWIEA5-A2", "wieWIEA5-B1"],
s["wieWIEA5-A2", "wieWIEA5-B2"]
))
s["wieWIEA5-A1", "wieWIEA5-A2"]
s["wieWIEA5-B1", "wieWIEA5-B2"]
s["wieWIEA5-A1", "wieWIEA5-B1"]
mean(c(
s["wieWIEA5-A1", "wieWIEA5-A2"],
s["wieWIEA5-B1", "wieWIEA5-B2"]
))
seq
devtools::build(args = c('--resave-data','--compact-vignettes="gs+qpdf"'))
devtools::build()
devtools::build()
devtools::build()
usethis::use_cran_comments(open = rlang::is_interactive())
library(MorphoTools2)
data(centaurea)
centaurea = naMeanSubst(centaurea)
centaurea = deletePopulation(centaurea, populationName = c("LIP", "PREL"))
# classification by linear discriminant function
classifRes.lda = classif.lda(centaurea, crossval = "indiv")
# exporting results
classif.matrix(classifRes.lda, level = "taxon")
# exporting results
a = classif.matrix(classifRes.lda, level = "taxon")
str(a)
a = descrTaxon(centaurea)
str(a)
library(abind)
library(ade4)
library(ape)
library(askpass)
library(assertthat)
library(backports)
library(base64enc)
library(bit)
library(bit64)
library(brew)
library(brio)
library(broom)
library(cli)
library(clipr)
library(clisymbols)
a = descrTaxon(centaurea)
exportRes(a)
a = head(centaurea)
str(a)
head(centaurea)
head(centaurea)
head(centaurea, n = -1)
head(centaurea, n = -100)
a = characters(centaurea)
str(a)
knn.select(centaurea, crossval = "indiv")
missingCharactersTable(centaurea, level = "pop")
a= missingCharactersTable(centaurea, level = "pop")
str(a)
sW = shapiroWilkTest(centaurea)
str(sW)
sW
object=centaurea
p.value = 0.05
characters = colnames(object$data)
groups =  levels(unlist(object$Taxon))
shapiroWilkStatistic = array(numeric(), c(length(characters), length(groups)), dimnames = list(characters, groups))
shapiroWilkStatistic = as.data.frame(shapiroWilkStatistic)
array(numeric(), c(length(characters), length(groups)), dimnames = list(characters, groups))
shapiroWilkStatistic = array(numeric(), c(length(characters), length(groups)), dimnames = list(characters, groups))
shapiroWilkStatistic = as.data.frame(shapiroWilkStatistic)
groups
group="hybr"
groupPositions = which( unlist(object$Taxon) %in% group)
apply(object$data[groupPositions, ], 2,
function(x) {
out <- tryCatch(
{
stats::shapiro.test(x)$p.value
},
error=function(cond) {
return(NaN)
}
)
return(out)
}
)
apply(object$data[groupPositions, ], 2,
stats::shapiro.test(x)$p.value
)
shapiroWilkStatistic[group] = apply(object$data[groupPositions, ], 2,
function(x) {
out <- tryCatch(
{
stats::shapiro.test(x)$p.value
},
error=function(cond) {
return(NaN)
}
)
return(out)
}
)
shapiroWilkStatistic
shapiroWilkStatistic = array(numeric(), c(length(characters), length(groups)), dimnames = list(characters, groups))
shapiroWilkStatistic = as.data.frame(shapiroWilkStatistic)
# calculate descr statistics
for (group in groups) {
groupPositions = which( unlist(object$Taxon) %in% group)
shapiroWilkStatistic[group] = apply(object$data[groupPositions, ], 2,
function(x) {
out <- tryCatch(
{
stats::shapiro.test(x)$p.value
},
error=function(cond) {
return(NaN)
}
)
return(out)
}
)
}
shapiroWilkStatistic
if (! is.na(p.value)) {
greaterThenP = which(shapiroWilkStatistic > p.value)
lowerThenP = which(shapiroWilkStatistic <= p.value)
shapiroWilkStatistic[greaterThenP] = "normally distributed"
shapiroWilkStatistic[lowerThenP] = "NOT normally distributed"
}
shapiroWilkStatistic = as.matrix(shapiroWilkStatistic)
if (! is.na(p.value)) {
greaterThenP = which(shapiroWilkStatistic > p.value)
lowerThenP = which(shapiroWilkStatistic <= p.value)
shapiroWilkStatistic[greaterThenP] = "normally distributed"
shapiroWilkStatistic[lowerThenP] = "NOT normally distributed"
}
as.data.frame(shapiroWilkStatistic)
library(MorphoTools2)
sW = shapiroWilkTest(centaurea)
str(sW)
a= stepdisc.calc(centaurea)
str(a)
a=  transformCharacter(centaurea, character = "SF", FUN = function(x) log(x+1))
str(a)
#                  can be identified by stepwise discriminant analysis.)
centaurea = naMeanSubst(centaurea)
centaurea = deletePopulation(centaurea, populationName = c("LIP", "PREL"))
centaurea = keepCharacter(centaurea, c("MLW", "ML", "IW", "LS", "IV", "MW", "MF",
"AP", "IS", "LBA", "LW", "AL", "ILW", "LBS",
"SFT", "CG", "IL", "LM", "ALW", "AW", "SF") )
# add a small constant to characters witch are invariant within taxa
centaurea$data[ centaurea$Taxon == "hybr", "LM" ][1] =
centaurea$data[ centaurea$Taxon == "hybr", "LM" ][1] + 0.000001
centaurea$data[ centaurea$Taxon == "ph", "IV" ][1] =
centaurea$data[ centaurea$Taxon == "ph", "IV" ][1] + 0.000001
centaurea$data[ centaurea$Taxon == "st", "LBS"][1] =
centaurea$data[ centaurea$Taxon == "st", "LBS"][1] + 0.000001
boxMTest(centaurea)
library(heplots)
a = boxMTest(centaurea)
str(a)
cdaRes = cda.calc(centaurea)
str(cdaRes)
classifRes.lda = classif.lda(centaurea, crossval = "indiv")
# exporting results
classif.matrix(classifRes.lda, level = "taxon")
# exporting results
a = classif.matrix(classifRes.lda, level = "taxon")
str(a)
