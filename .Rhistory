2.00487 - 0.36473
2.00487 + 0.36473
2.00487 + 0.36473
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
cda.calc(data)
library(MorphoTools)
cda.calc(data)
objects$scores
cda$scores
colnames(cda$score)
colnames(cda$score)[1]
colnames(cda$score)[1] = "Taxon"
colnames(cda$score)
library(MorphoTools)
cda.calc(data)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
cda$
pcaRes = pca.calc(data)
cda$
pcaRes = pca.calc(data)
pcaRes = pca.calc(data)
pcaRes$sdev
pcaRes$center
pcaRes$scale
object = data
prcompRes = prcomp(object$data, center=T, scale.=T)
# calculate group centroid locations
prcompRes$x
aggregate(prcompRes$x ~ Taxon, data = object, mean)
aggregate(prcompRes$x ~ object$Taxon, mean)
prcompRes$x
aggregate(as.matrix(prcompRes$x) ~ object$Taxon, mean)
str(prcompRes$x)
(as.data.frame(prcompRes$x))
str(as.data.frame(prcompRes$x))
View(as.data.frame(prcompRes$x))
object$Taxon
aggregate(as.data.frame(prcompRes$x) ~ object$Taxon, mean)
as.list(object$Taxon)
centroids = aggregate(as.data.frame(prcompRes$x) ~ as.list(object$Taxon), mean)
centroids = aggregate(as.data.frame(prcompRes$x) ~ as.list(object$Taxon), mean)
prcompRes$x[,1]
cbind(prcompRes$x[,1],prcompRes$x[,2])
object$Taxon
centroids <- aggregate(cbind(prcompRes$x[,1],prcompRes$x[,2]) ~ object$Taxon, mean)
centroids <- aggregate(cbind(prcompRes$x[,1],prcompRes$x[,2]) ~ object$Taxon, FUN = mean)
View(centroids)
centroids  aggregate(prcompRes$x ~ object$Taxon, FUN = mean)
centroids = aggregate(prcompRes$x ~ object$Taxon, FUN = mean)
View(centroids)
library(MorphoTools)
pca.calc(data)
colnames(pcaResult$groupMeans)[1]
library(MorphoTools)
pca.calc(data)
cdaResult
cdaResult = cda.calc(data)
cdaResult = cda.calc(data)
library(MorphoTools)
cda.calc
cda.calc(data)
library(MorphoTools)
cda.calc(data)
library(candisc)
cda.calc(data)
detach("package:candisc", unload = TRUE)
library(MorphoTools)
detach("package:candisc", unload = TRUE)
library(MorphoTools)
cda.calc(data)
cdaResult = cda.calc(data)
cdaResult$rank
cdaResult$rank == 2
length(cdaResult$eigenValues)
cdaResult$pch
cdaResult$objects$Taxon
cdaResult$objects$Taxon
cdaResult$objects$scores
cdaResult$col
library(MorphoTools)
plot.points(cdaResult)
library(MorphoTools)
library(MorphoTools)
plot.points(cdaResult)
library(MorphoTools)
plot.points(cdaResult)
cdaResult$objects$scores[ ,axes[1]]
library(MorphoTools)
plot.points(cdaResult)
axes = c(1,2)
plot(x = cdaResult$objects$scores[ ,axes[1]], y = cdaResult$objects$scores[ ,axes[2]])
cdaResult$objects$scores[ ,axes[1]]
cdaResult$objects$scores
cda$scores[,1]
cdaResult$objects$scores[,1]
library(MorphoTools)
cdaResult = cda.calc(data)
cdaResult$objects$scores[ ,axes[1]]
cdaResult$objects$scores
plot(x = cdaResult$objects$scores[ ,axes[1]], y = cdaResult$objects$scores[ ,axes[2]])
plot.points(cdaResult)
plot.points(cdaResult, col = c("red", "green", "navy", "pink"))
plot.points(cdaResult, col = c("red", "green", "navy", "wheet"))
plot.points(cdaResult, col = c("red", "green", "navy", "wheed"))
plot.points(cdaResult, col = c("red", "green", "navy", "whead"))
plot.points(cdaResult, col = c("red", "green", "navy", "wheat"))
plot.points(cdaResult, col = c("red", "green", "navy", "tomato"))
plot.points(cdaResult, col = c("red", "green", "navy", "tomato", "yellow"))
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"))
data = read.morphodata("./tests/testFiles/Impatiens_Pektinata.txt")
cdaResult = cda.calc(data)
data
cda.calc(data)
object = data
# calculate
d = as.matrix(object$data)
x = lm(d ~ object$Taxon)
cda = candisc(x, term="object$Taxon")
cdaResult = newCdadata()
# internal
# returns new pcadata object
newCdadata <- function() {
newCdadata <- list(
axesVariance = numeric(),
groupMeans = data.frame(),
coeffs.raw = matrix(),
coeffs.std = matrix(),
totalCanonicalStructure = matrix(),
objects = list(
ID = factor(),
Population = factor(),
Taxon = factor(),
scores = data.frame()),
rank = numeric(),
eigenValues = numeric(),
canrsq = numeric()
)
attr(newCdadata, "class") <- "cdadata"
return(newCdadata)
}
cdaResult = newCdadata()
cdaResult$rank = cda$rank
cdaResult$eigenValues = cda$eigenvalues
cdaResult$canrsq = cda$canrsq
cdaResult$axesVariance = cda$pct
cdaResult$groupMeans = cda$means
cdaResult$coeffs.raw = cda$coeffs.raw
cdaResult$coeffs.std = cda$coeffs.std
cdaResult$totalCanonicalStructure = cda$structure
cdaResult$objects$ID = object$ID
cdaResult$objects$Population = object$Population
cdaResult$objects$Taxon = object$Taxon
cdaResult$objects$scores = cda$scores[,-1]
colnames(cdaResult$objects$scores)[1] = "Taxon"
cdaResult$objects$scores
cdaResult$objects$scores
colnames(cdaResult$objects$scores)
cda$scores
library(MorphoTools)
cdaResult = cda.calc(data)
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"))
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
library(MorphoTools)
library(MorphoTools)
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
cdaResult$objects$scores
levels(cdaResult$objects$Taxon)
cdaResult$objects$scores
taxlev[1]
cdaResult$objects$scores
(cdaResult$objects$Taxon == taxlev[1])
taxlev = levels(cdaResult$objects$Taxon)
(cdaResult$objects$Taxon == taxlev[1])
cdaResult$objects$scores[ (cdaResult$objects$Taxon == taxlev[1]) ]
cdaResult$objects$Taxon
cdaResult$objects$scores[which( cdaResult$objects$Taxon %in% taxlev[1]), ]
cdaResult$objects$scores[which( cdaResult$objects$Taxon %in% taxlev[1])]
cdaResult$objects$scores[ (cdaResult$objects$Taxon == taxlev[1]) ]
cdaResult$objects$scores[cdaResult$objects$Taxon == taxlev[1]]
hist1 = hist(cdaResult$objects$scores[cdaResult$objects$Taxon == taxlev[1]], plot = F, breaks = breaks )
xhist = hist(cdaResult$objects$scores, plot = F
)
breaks = xhist$breaks
hist1 = hist(cdaResult$objects$scores[cdaResult$objects$Taxon == taxlev[1]], plot = F, breaks = breaks )
hist2 = hist(cdaResult$objects$scores[cdaResult$objects$Taxon == taxlev[2]], plot = F, breaks = breaks )
max(hist1$counts)
max(hist2$counts)
max(max(hist1$counts),max(hist2$counts))
ymax<-max(max(hist1$counts),max(hist2$counts))
c(0,round(ymax+4,digits=-1))
ymax+4
round(ymax+4,digits=-1)
hist1$counts
hist2$counts
c(hist1$counts, hist2$counts)
ymax = max( c(hist1$counts, hist2$counts))
hist1
taxlev[1]
cdaResult$col
cdaResult$objects$scores[cdaResult$objects$Taxon == taxlev[1]]
setValuesForVector <- function(vector, symbols) {
uniques = unique(vector)
for (uniq in uniques) {
levelPos = which( uniques %in% uniq )
while (levelPos > length(symbols)) {
# ak uzivatel zada 2 pch pre 3 taxony, tak pre posledny taxon 3 - 2 a pch bude 1
levelPos = levelPos - length(symbols)
}
#symbolsPositions = which( object$objects$Taxon %in% uniq)
#vector[symbolsPositions == uniq] = symbols[levelPos]
vector = as.character(vector)
vector[vector == uniq] = symbols[levelPos]
vector = as.factor(vector)
}
return(as.character(vector))
}
col = c( "green", "navy", "tomato", "yellow")
# nastav pch a col spravne podla taxonu
cdaResult$pch = as.numeric( setValuesForVector(cdaResult$objects$Taxon, pch))
cdaResult$col = setValuesForVector(cdaResult$objects$Taxon, col)
cdaResult$col
cdaResult$col[cdaResult$objects$Taxon == taxlev[1]]
unique(cdaResult$col[cdaResult$objects$Taxon == taxlev[1]])
hist1$col = cdaResult$col[cdaResult$objects$Taxon == taxlev[1]][1]
hist1$col
hist2$col = cdaResult$col[cdaResult$objects$Taxon == taxlev[2]][1]
ylim[1]
ylim = c(0,round(ymax+4,digits=-1))
seq(ylim[1], ylim[2], 10)
ymax = 3
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 1
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 2
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 4
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 5
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 6
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 7
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 8
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 9
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 10
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 11
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 12
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 14
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 16
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 19
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 20
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 21
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 21
ylim = c(0,round(ymax+4,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax+4
round(ymax+4,digits=-1)
21%10
21 % 10
21 / 10
21 \% 10
21 % 10
21 / 10
21 * 10
ylim = c(0,round(ymax+5,digits=-1))
ylim
seq(ylim[1], ylim[2], 10)
ymax = 20
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 19
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 20
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 21
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 23
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 24
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 27
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 29
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 30
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 20
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax[1]
ymax[3]
ymax = 18
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 28
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 38
ylim = c(0,round(ymax+5,digits=-1))
ylim
ymax = 30
ylim = c(0,round(ymax+5,digits=-1))
ylim
30 | 3
30 | 2
30 | 222
28 ^ 3
2 ^ 3
2 ^ 2
2 %% 2
2 %% 10
10 %% 10
11 %% 10
13 %% 10
10 %% 3
10 %% 4
10 %% 5
10 %% 6
11 %% 10
11  %/% 10
13  %/% 10
19  %/% 10
20  %/% 10
21  %/% 10
23  %/% 10
27  %/% 10
30  %/% 10
30 %% 10
31  %/% 10
31 %% 10
32 %% 10
33 %% 10
34 %% 10
35 %% 10
36 %% 10
37 %% 10
38 %% 10
39 %% 10
40 %% 10
31  %/% 10
34  %/% 10
43  %/% 10
40 %% 10
42 %% 10
(42 %% 10) > 0
(40 %% 10) > 0
ymax  %/% 10
ymax = 33
upperLim = ymax  %/% 10
upperLim++
if ((40 %% 10) > 0) upperLim++
ylim = c(0, )}
ymax = 33
upperLim = ymax  %/% 10
if ((40 %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 33
upperLim = ymax  %/% 10
if ((40 %% 10) > 0) upperLim = upperLim + 1
upperLim
(40 %% 10) > 0)
((40 %% 10) > 0)
(40 %% 10)
(ymax %% 10)
ymax = 33
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 38
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 40
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 42
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 47
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 41
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 40
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 60
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 61
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 63
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 67
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
ymax = 69
upperLim = ymax  %/% 10
if ((ymax %% 10) > 0) upperLim = upperLim + 1
upperLim
library(MorphoTools)
data
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
cdaResult
data
rm(cdaResult)
data = read.morphodata("./tests/testFiles/Impatiens_Pektinata.txt")
cdaResult = cda.calc(data)
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
cdaResult$rank
library(MorphoTools)
t
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
data = read.morphodata("./tests/testFiles/Impatiens_individuals.txt")
cdaResult = cda.calc(data)
plot.points(cdaResult, col = c( "green", "navy", "tomato", "yellow"), legend = T)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = F)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, legend.pos = c(2, 120))
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, legend.pos = c(2, 160))
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, legend.pos = c(2, 140))
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, legend.pos = c(-2, 140))
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, legend.pos = c(-6, -10))
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = F)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = F, labels = T)
library(MorphoTools)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = F, labels = T)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, labels = T)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, labels = F)
plot.points(cdaResult, col = c( rgb(0, 0, 255, max = 255, alpha = 100), rgb(218, 0, 0, max = 255, alpha = 100)), legend = T, labels = T)
remove.packages("MorphoTools", lib="~/R/x86_64-pc-linux-gnu-library/3.6")
library(MorphoTools, lib.loc = "/media/mint/MILA USB/Rlib")
read.morphodata("/media/mint/MILA USB/CviceniaMorfoPrahaR&SYN-TAX/pratensis/Pratensis_data.csv")
data = read.morphodata("/media/mint/MILA USB/CviceniaMorfoPrahaR&SYN-TAX/pratensis/Pratensis_data.csv")
classifda.lda(data)
