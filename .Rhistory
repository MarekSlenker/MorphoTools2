paste(pcaRes$cumulativeAxesVariance, collapse = " ")
export.res(morphoMockup, file = "../testFiles/PCA.morphoMockup")
export.res(morphoMockup, file = "../testFiles/PCA.morphoMockup.txt")
export.res(morphoMockup, file = "~/PCA.morphoMockup.txt")
pca.calc(morphoMockup)
clust(morphoMockup)
clust(morphoMockup)
plot(clust(morphoMockup))
morphoDataFrame = data.frame("ID" = c("id1","id2","id3","id4","id5","id6","id7","id8"),
"Population" = c("Pop1", "Pop1", "Pop2", "Pop2", "Pop3", "Pop3", "Pop4", "Pop4"),
"Taxon" = c("TaxA", "TaxA", "TaxA", "TaxA", "TaxB", "TaxB", "TaxB", "TaxB"),
"data" = data.frame(
"Ch1" = c(1,3,4,6,1,7,12,8),
"Ch2" = c(11, 12,42,12,32,11,22,18)))
morphoMockup = morphodataFromDataFrame(morphoDataFrame)
clust(morphoMockup)
clustRes = clust(morphoMockup)
clustRes
View(clustRes)
clustRes$method
clustRes$merge
clustRes$labels
paste(clustRes$labels, collapse = " ")
cormat(morphoMockup)
paste(cormatRes, collapse = " ")
cormatRes = cormat(morphoMockup)
paste(cormatRes, collapse = " ")
cormatRes = cormat.signifTest(morphoMockup)
cormatRes
object
object = morphoMockup
table = matrix(data = numeric(), nrow = ncol(object$data), ncol = ncol(object$data))
colnames(table) = colnames(object$data)
row.names(table) = colnames(object$data)
table
colnames(object$data)
colnames(object$data)
for (row in colnames(object$data)) {
for (col in colnames(object$data)) {
cc = cor.test(x = object$data[, row], y = object$data[, col], method = method,
use="pairwise.complete.obs", alternative = alternative)
table[row, col] = paste( round(cc$estimate, digits = 3), "; p-value = ", round(cc$p.value, digits = 3), sep = "" )
}
}
table
library(MorphoTools)
cormatRes = cormat.signifTest(morphoMockup)
cormatRes
View(cormatRes)
paste(cormatRes, collapse = " ")
cormatRes = cormat.signifTest(morphoMockup)
(paste(cormatRes, collapse = " ")
)
cormatRes[1,1]
cormatRes[2,2]
cormatRes[2,3]
as.character(cormatRes[2,2])
giveMeNiceBoxPlot <- function(object, character, upperWhisker, lowerWhisker) {
# vyrataj klasicky bxplot
bxPlot = boxplot(unlist(object$data[character]) ~ object$Taxon, data = object$data, plot = F)
# a teraz ho zmen
taxa = levels(object$Taxon)
# clear bxPlot$out and   bxPlot$group
bxPlot$out = numeric(0)
bxPlot$group = numeric(0)
for (tax in taxa)   {
dataTaxon = object$data[which( object$Taxon %in% tax), ][character]
upWhisker = as.numeric( quantile(dataTaxon, probs = upperWhisker, na.rm = T)  )
loWhisker = as.numeric( quantile(dataTaxon, probs = lowerWhisker, na.rm = T)  )
bxPlot$stats[1, which(tax == taxa)] = loWhisker
bxPlot$stats[5, which(tax == taxa)] = upWhisker
for (individual in  1:nrow(dataTaxon)){
if (!(is.na(dataTaxon[individual, ]))){
if (dataTaxon[individual, ] > upWhisker | dataTaxon[individual, ] < loWhisker){
bxPlot$out = c(bxPlot$out, dataTaxon[individual, ])
bxPlot$group = c(bxPlot$group, which(tax == taxa))
}
}
}
}
return(bxPlot)
}
giveMeNiceBoxPlot(morphoMockup, "Ch1", 0.95, 0.05)
#'  (without the most extreme 10% of values) use to be used in taxa descriptions, determination keys, etc. Rectangle define 25th and 75th
#'  percentiles, bold horizontal line show median.
#'
#' @examples
#' boxplot.character(myMorphoData, "ST", col = "grey", border = "red")
#' boxplot.character(myMorphoData, "ST", outline = TRUE, pch = 8, lowerWhisker = 0.05, upperWhisker = 0.95)
#' boxplot.character(myMorphoData, "ST", outline = FALSE, xlab = "Taxa", ylab = "length", main = "Total stem height (cm)")
#' boxplot.character(myMorphoData, "ST", varwidth = T, notch = T, boxwex = 0.4, staplewex = 1.3, horizontal = T)
#'
#' @export
boxplot.character <- function(object, character, outline = TRUE, lowerWhisker = 0.05, upperWhisker = 0.95, col = "white", ...) {
checkClass(object, "morphodata")
if (!(character %in% colnames(object$data))) stop(paste("character", character, "was not found in attached data."), call. = F)
bxPlot = giveMeNiceBoxPlot(object, character, upperWhisker = upperWhisker, lowerWhisker = lowerWhisker)
bxp(bxPlot, boxfill = col, outline = outline, ...)
}
boxplot.character(morphoMockup, "Ch1", 0.95, 0.05)
morphoMockup
boxplot.character(morphoMockup, "data.Ch1", 0.95, 0.05)
bxplot = giveMeNiceBoxPlot(morphoMockup, "data.Ch1", 0.95, 0.05)
bxplot
paste(bxplot$stats, collapse = " ")
paste(bxplot$out, collapse = " ")
library(MorphoTools)
library(MorphoTools)
plot(pcaRes)
plot(pcaRes, axes = c(1,3))
pcaRes
length(pcaRes$objects$scores)
length(pcaRes$eigenValues)
library(MorphoTools)
plot(pcaRes, axes = c(1,3))
plot(pcaRes, axes = c(1,3))
axes = c(1,2)
max(axes)
length(object$eigenValues)
object
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pcaRes = pca.calc(data)
plot(pcaRes, axes = c(1,3))
plot(pcaRes, axes = c(1,2))
plot(pcaRes, axes = c(1,6))
plot(pcaRes, axes = c(1,36))
pcaRes
library(MorphoTools)
plot(pcaRes, axes = c(1,3))
plot(pcaRes, axes = c(1,3), col = c("red", "green"))
plot(pcaRes, axes = c(1,3), col = c("red", "green", "pink", "yellow"))
plot(pcaRes, axes = c(1,2), col = c("red", "green", "pink", "yellow"))
plot(pcaRes, axes = c(2,2), col = c("red", "green", "pink", "yellow"))
plot(pcaRes, axes = c(2,1), col = c("red", "green", "pink", "yellow"))
library(MorphoTools)
library(MorphoTools)
plot(pcaRes, col = c("red", "green", "pink", "yellow"))
plot(pcaRes, col = c("red", "green", "pink", "yellow"), xlim = c(-2,4))
plot(pcaRes, col = c("red", "green", "pink", "yellow"), main = "ds")
plot(pcaRes, col = c("red", "green", "pink", "yellow"), main = "My PCA plot", frame.plot = F)
plot(pcaRes, col = c("red", "green", "pink", "yellow"), main = "My PCA plot", frame.plot = F, cex = 0.8)
plot(pcaRes, axes = c(2,1), col = c("red", "green", "pink", "yellow"), pch = c(20, 17, 8, 21))
plot(pcaRes, axes = c(2,1), col = c("red", "green", "blue", "yellow"), pch = c(20, 17, 8, 21))
plot(pcaRes, axes = c(2,1), col = c("red", "green", "blue", "orange"), pch = c(20, 17, 8, 21))
plot(pcaRes, axes = c(2,1), col = c("red", "green", "blue", "orange"), pch = c(20, 17, 8, 21), bg = "orange")
plot(pcaRes, axes = c(2,1), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot(pcaRes, main = "My PCA plot", frame.plot = F, cex = 0.8)
library(MorphoTools)
plot(pcaRes, main = "My PCA plot", frame.plot = F, cex = 0.8)
plot.labels(pcaRes)
library(MorphoTools)
library(MorphoTools)
plot.labels(pcaRes)
library(MorphoTools)
plot(pcaRes, main = "My PCA plot", frame.plot = F, cex = 0.8)
plot.labels(pcaRes)
library(MorphoTools)
plot.labels(pcaRes)
library(MorphoTools)
plot(pcaRes, main = "My PCA plot", frame.plot = F, cex = 0.8)
plot.labels(pcaRes)
library(MorphoTools)
plot(pcaRes, main = "My PCA lot", frame.plot = F, cex = 0.8)
plot.labels(pcaRes)
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pcaRes = pca.calc(data)
plot(pcaRes, axes = c(2,1), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot.labels(pcaRes)
library(MorphoTools)
plot.labels(pcaRes)
library(MorphoTools)
plot.labels(pcaRes)
plot(pcaRes, main = "My PCA lot", frame.plot = F, cex = 0.8)
plot.labels(pcaRes)
plot(pcaRes, axes = c(2,1), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot(pcaRes, main = "My PCA lot", frame.plot = F, cex = 0.8)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot.labels(pcaRes)
source('~/Git/MorphoTools/R/plot.labels.R')
library(MorphoTools)
plot.labels(pcaRes)
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pcaRes = pca.calc(data)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot.labels(pcaRes)
library(MorphoTools)
plot.labels(pcaRes)
plotlabels(pcaRes)
pcaRes
plotlabels(pcaRes)
library(MorphoTools)
plotlabels(pcaRes)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plotlabels(pcaRes)
library(MorphoTools)
plotlabels(pcaRes)
plotlabels(pcaRes)
library(MorphoTools)
library(MorphoTools)
plotlabels(pcaRes)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plotlabels(pcaRes)
library(MorphoTools)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plotlabels(pcaRes)
plot.labels(pcaRes)
s3_dispatch(plot.labels)
library(MorphoTools)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot.labels(pcaRes)
library(MorphoTools)
plot.labels(pcaRes, axes = c(2,1), cex = 0.8, col = "red", pos = 4, offset = 0.4)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot.labels(pcaRes, axes = c(2,1), cex = 0.8, col = "red", pos = 4, offset = 0.4)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
plot.labels(pcaRes, axes = c(1,2), cex = 0.8, col = "red", pos = 4, offset = 0.4)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
source('~/Git/MorphoTools/R/plot.labels.R')
library(MorphoTools)
detach("package:MorphoTools", unload = TRUE)
library(MorphoTools)
source('~/Git/MorphoTools/R/plot.labels.R')
source('~/Git/MorphoTools/R/plot.labels.R')
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pcaRes = pca.calc(data)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
p = plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
p = plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", plot = F)
.traceback()
traceback()
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pcaRes = pca.calc(data)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", plot = F)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", plot = F)
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", plot = F)
warnings()
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
traceback()
.traceback()
call("plot")
call("poolot")
sys.calls()
sys.frames()
sys.parents()
sys.on.exit()
sys.status()
parent.frame(n = 1)
parent.frame(n = 10)
global_frame()
current_frame()
ctxt_frame(n = 1)
call_frame(n = 1, clean = TRUE)
ctxt_depth()
call_depth()
ctxt_stack(n = NULL, trim = 0)
call_stack(n = NULL, clean = TRUE)
install.packages("rlang")
library(rlang)
ctxt_depth()
call_depth()
ctxt_stack(n = NULL, trim = 0)
call_stack(n = NULL, clean = TRUE)
global_frame()
current_frame()
ctxt_frame(n = 1)
call_frame(n = 1, clean = TRUE)
ctxt_depth()
detach("package:rlang", unload = TRUE)
base::sys.nframe()
plot(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange")
base::sys.nframe()
foo <- function(x) { print(1); bar(2) }
bar <- function(x) { x + a.variable.which.does.not.exist }
foo(2) # gives a strange error
traceback()
## [1] "bar(2)" "foo(2)"
bar
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pops = popul.otu(data)
pcaRes = pca.calc(pops)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
warnings()
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
library(MorphoTools)
source('~/Git/MorphoTools/dfa.R', echo=TRUE)
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2),  bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
object = pcaRes
object$pch
object$pch = as.numeric( setValuesForVector(object$objects$Taxon, pch))
setValuesForVector <- function(vector, symbols) {
uniques = unique(vector)
for (uniq in uniques) {
levelPos = which( uniques %in% uniq )
while (levelPos > length(symbols)) {
# ak uzivatel zada 2 pch pre 3 taxony, tak pre posledny taxon 3 - 2 a pch bude 1
levelPos = levelPos - length(symbols)
}
#symbolsPositions = which( object$objects$Taxon %in% uniq)
#vector[symbolsPositions == uniq] = symbols[levelPos]
vector = as.character(vector)
vector[vector == uniq] = symbols[levelPos]
vector = as.factor(vector)
}
return(as.character(vector))
}
object$pch = as.numeric( setValuesForVector(object$objects$Taxon, pch))
col = c("red", "green", "blue", "red")
pch = c(20, 17, 8, 21)
object$pch = as.numeric( setValuesForVector(object$objects$Taxon, pch))
object$col = setValuesForVector(object$objects$Taxon, col)
unique(object$objects$Taxon)
unique(object$pch)
unique(object$col)
object$objects$ID
df = data.frame("ID" = object$objects$ID, "tax" = object$objects$Taxon, "pch" = object$pch, "col" = object$col)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
labels.points(pcaRes)
df = data.frame("ID" = object$objects$ID, "tax" = object$objects$Taxon, "pch" = object$pch, "col" = object$col)
View(df)
vector = pcaRes$objects$Population
symbols = col
uniques = unique(vector)
vector = pcaRes$objects$Taxon
uniques = unique(vector)
uniques
uniq = "ps"
which( uniques %in% uniq )
uniques
levelPos = which( uniques %in% uniq )
while (levelPos > length(symbols)) {
# ak uzivatel zada 2 pch pre 3 taxony, tak pre posledny taxon 3 - 2 a pch bude 1
levelPos = levelPos - length(symbols)
}
levelPos
symbols[levelPos]
vector[vector == uniq]
unique(object$objects$Taxon)
unique(object$pch)
unique(object$col)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange", legend = T, legend.pos = "bottomright", ncol = 3)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange", legend = T, legend.pos = "bottomright", ncol = 4)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange", legend = F, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8,
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, type = "l",
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, type = "b",
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, type = "h",
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, type = "p",
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, type = "p",
legend = F, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8,
legend = F, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8,
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, main = "ds",
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, main = "ds",
legend = F, legend.pos = "bottomright", ncol = 2)
legend(0,0,
legend = unique(pcaRes$objects$Taxon),
pch = unique(object$pch),
col = unique(object$col),
box.lwd = 2 )
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8, main = "ds",
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 0.8,pt.cex = 1.2,
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
pt.cex = 1.2,
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
pt.cex = 1.4,
legend = T, legend.pos = "bottomright", ncol = 2)
warnings()
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1.4,
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright", ncol = 2, horiz = F)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright", ncol = 2, horiz = T)
warnings()
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright",  horiz = T)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright",  horiz = F)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, axes = c(1,2),  bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2, cex = 2)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pops = popul.otu(data)
pcaRes = pca.calc(data)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright",  horiz = F)
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright",  horiz = F)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright",  horiz = T)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright")
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright")
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = T, legend.pos = "bottomright")
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = F, legend.pos = "bottomright")
plot.legend()
library(MorphoTools)
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = F, legend.pos = "bottomright")
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21))
library(MorphoTools)
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21))
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "red", box.lwd = 2, cex = 0.6 )
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "red", box.lwd = 2, cex = 3.6 )
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "darkred", box.lwd = 2, cex = 3.6 )
