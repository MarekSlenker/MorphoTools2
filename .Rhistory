cex = 1,
legend = T, legend.pos = "bottomright")
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = F, legend.pos = "bottomright")
plot.legend()
library(MorphoTools)
library(MorphoTools)
plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21),
bg = "orange",
cex = 1,
legend = F, legend.pos = "bottomright")
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21))
library(MorphoTools)
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21))
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "red", box.lwd = 2, cex = 0.6 )
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "red", box.lwd = 2, cex = 3.6 )
plot.legend(pcaRes, col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "darkred", box.lwd = 2, cex = 3.6 )
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
library(MorphoTools)
pca.calc(data)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
pca.calc(data)
pcaRes = pca.calc(data)
summary(pcaRes)
summary(pcaRes)
class(pcaRes)
pcaRes$eigenValues
n = 4
pcaRes$eigenValues[1:n]
export.res(data, file = "./aa.txt")
install.packages("roxygen2")
library(MorphoTools)
pca.eigenValues(data)
pcaRes = pca.calc(pcaRes)
pca.eigenValues(pcaRes)
pca.eigenVectors(pcaRes)
e = pca.eigenVectors(pcaRes)
export.res(e, file = "./aa.txt")
library(MorphoTools)
export.res(e, file = "./aa.txt")
as.data.frame(e)
library(MorphoTools)
export.res(e, file = "./aa.txt")
e
as.data.frame(e)
data.frame(e)
data.frame("" = rownames(e), e)
data.frame(" " = rownames(e), e)
data.frame("character" = rownames(e), e)
library(MorphoTools)
export.res(e)
plot.points(pcaRes)
labels.points(pcaRes)
plot.points(pcaRes, labels = T)
labels.points(pcaRes)
plot.points(pcaRes, labels = F)
plot.legend(pcaRes)
plot.points(pcaRes, legend = T)
plot.points(pcaRes, legend = T)
plot.points(pcaRes, legend = T, ncol = 2)
plot.legend(pcaRes)
pcaRes = cda.calc(data)
cdaRes = cda.calc(data)
summary(cdaRes)
object = data
# calculate
d = as.matrix(object$data)
x = lm(d ~ object$Taxon)
cda = candisc(x, term="object$Taxon")
summary(cda)
object = cdaRes
object$rank
c(1: object$rank)
object$eigenValues
round(object$eigenValues, digits = 4)
round(object$eigenValues[,object$rank], digits = 4)
round(object$eigenValues[1:object$rank], digits = 4)
object$canrsq
round(object$canrsq[1:object$rank], digits = 4)
round(object$axesVariance[1:object$rank], digits = 4)
cumulProportion = numeric()
cumulProportion[4]
cumulProportion[1]
1:object$rank
object$rank:1
for (i in object$rank:1) {
cumulProportion[i] = sum(object$axesVariance[1:i])
}
cumulProportion
library(MorphoTools)
summary(cda)
summary(cdaRes)
cdaRes = cda.calc(data)
summary(cdaRes)
object$totalCanonicalStructure[,1:4]
print(object$totalCanonicalStructure[,1:object$rank])
library(MorphoTools)
summary(cdaRes)
summary(cdaRes)
plot.points(cdaRes)
plot.points(cdaRes, col = c("red"))
plot.points(cdaRes, col = c("red", "green"))
plot.points(cdaRes, col = c("red", "green", "navy"))
plot.points(cdaRes, col = c("red", "green", "navy", "pink"))
plot.points(cdaRes, col = c("red", "green", "navy", "orange"))
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), pch = c(11,13,14,9))
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), pch = c(11,13,14,9), legend = T)
dataShort = delete.population(c("hybr", "ph"))
dataShort = delete.population(object = data, populationName = c("hybr", "ph"))
dataShort = delete.taxon(object = data, populationName = c("hybr", "ph"))
dataShort = delete.taxon(object = data, taxonName =  = c("hybr", "ph"))
dataShort = delete.taxon(object = data, taxonName =  c("hybr", "ph"))
cdaRes = cda.calc(dataShort)
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), pch = c(11,13,14,9), legend = T)
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T)
cdaResult$pch
library(MorphoTools)
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T)
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T)
library(MorphoTools)
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T)
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.5))
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T, breaks = seq(-6, 3.5, 0.5))
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T, breaks = seq(-6, 3.5, 0.2))
plot.points(cdaRes, col = c("red", "green", "navy", "orange"), legend = T, breaks = seq(-6, 4, 2))
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 2))
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
library(MorphoTools)
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
library(MorphoTools)
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
cdaRes = cda.calc(data)
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, col = c("green", "red"), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, col = c("green", "red", "tommato"), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, col = c("green", "red", "tomato"), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, col = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, col = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = 22)
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = 22)
library(MorphoTools)
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = 22)
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = 22)
library(MorphoTools)
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = 22)
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = c(22, 23, 25, 21))
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
pcaRes = pca.calc(data)
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, pch = c(22, 15, 25, 21))
warnings()
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, pch = c(22, 15, 25, 21))
library(MorphoTools)
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, pch = c(22, 15, 25, 21))
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, pch = c(22, 15, 25, 21))
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, pch = c(22, 15, 25, 21))
library(MorphoTools)
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, pch = c(22, 15, 25, 21))
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = T, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.legend(pcaRes)
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.legend(cdaRes)
library(MorphoTools)
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.legend(cdaRes)
library(MorphoTools)
library(MorphoTools)
plot.legend(cdaRes)
plot.legend(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21))
plot.legend(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21), bg = "grey")
plot.legend(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21), bg = "grey", ncol = 2)
plot.legend(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21), bg = "grey", ncol = 4)
plot.legend(cdaRes, 0,0, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21), bg = "grey", ncol = 4)
length(pcaRes$objects$scores)
length(pcaRes$eigenValues)
length(cdaRes$eigenValues)
cdaRes$eigenValues
length(colnames(cdaRes$objects$scores))
length(colnames(pcaRes$objects$scores))
library(MorphoTools)
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
labels.points(cdaRes)
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
labels.points(cdaRes)
plot.3D(pcaRes)
plot.3D(pcaRes, bg.col = "red")
plot.3D(pcaRes, pch = 22,bg.col = "red")
plot.3D(pcaRes, pch = 22,bg.col = c("red", "green"))
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
library(MorphoTools)
pcaRes = pca.calc(data)
dataShort = delete.taxon(object = data, taxonName =  c("hybr", "ph"))
plot.points(pcaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.points(pcaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.points(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(pcaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.points(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(dataShort, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
pcaRes = pca.calc(dataShort)
plot.points(pcaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
cdaRes = cda.calc(dataShort)
plot.points(cdaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, pt.bg = c("green", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, col = c("green", "navy", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, col = c("green", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, col = c("green", "navy", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, col = c("green", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
labels.points(cdaRes)
plot.legend(cdaRes, 0,0, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21), bg = "grey", ncol = 4)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  pch = c(22, 15, 25, 21), bg = "grey", ncol = 4)
plot.legend(cdaRes, 0,10, col = c("green", "orange"), pch = c(22, 15, 25, 21), bg = "grey", ncol = 4)
plot.legend(cdaRes, 0,10, col = c("green", "orange"), bg = "grey", ncol = 4)
plot.legend(cdaRes, 0,10, col = c("green", "orange"))
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"))
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 17)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 27)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 24)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 25)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 23)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 26)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 21)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 22)
plot.legend(cdaRes, 0,10, pt.bg = c("green", "orange"), pch = 22)
plot.legend(cdaRes, pt.bg = c("green", "orange"), pch = 22)
plot.points(pcaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.points(cdaRes, col = c("green", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.legend(cdaRes, pt.bg = c("green", "orange"), pch = 22)
length(colnames(cdaRes$objects$scores))
cdaRes$objects$scores
pcaRes$eigenValues
length(pcaRes$eigenValues)
library(MorphoTools)
library(MorphoTools)
pcaRes = pca.calc(dataShort)
cdaRes = cda.calc(dataShort)
pcaRes = pca.calc(dataShort)
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
labels.points(cdaRes)
labels.points(cdaRes)
library(MorphoTools)
labels.points(cdaRes)
cdaRes = cda.calc(data)
plot.points(cdaRes, col = c(rgb(0,0,0, alpha=0.6), rgb(1,1,1, alpha=0.6)), legend = T, breaks = seq(-6, 4, 0.2))
plot.points(cdaRes, col = c("green", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
labels.points(cdaRes)
plot.legend(cdaRes, pt.bg = c("green", "orange"), pch = 22)
plot.3D(pcaRes, pch = 22,bg.col = c("red", "green"))
library(MorphoTools)
plot.3D(pcaRes, pch = 22,bg.col = c("red", "green"))
plot.3D(pcaRes, pch = 22,bg.col = c("red", "green"))
plot.3D(pcaRes, pch = 22, col = c("red", "green"))
plot.3D(pcaRes, pch = 22, bg.col = c("red", "green"))
plot.points(pcaRes, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
plot.3D(pcaRes, pch = 22, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 22, pt.bg = c("red", "green"))
library(MorphoTools)
plot.3D(pcaRes, pch = 22, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 23, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 3, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 33, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 23, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 21, pt.bg = c("red", "green"))
plot.3D(pcaRes, pch = 21, pt.bg = c("red", "green"), legend = T)
plot.3D(pcaRes, pch = 22, pt.bg = c("red", "green"), legend = T)
plot.3D(pcaRes, pch = 22, pt.bg = c("red", "green"), legend = T, type = h)
plot.3D(pcaRes, pch = 22, pt.bg = c("red", "green"), legend = T, type = "h")
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
source('C:/Users/mslen/source/Git/MorphoTools/dfa.R', echo=TRUE)
library(MorphoTools)
data = read.morphodata("./tests/testFiles/samplePlnaMatica.txt")
object = data
summary(data)
cdaRes = cda.calc(data)
plot.points(cdaRes, col = c("green", "orange"), legend = F, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
plot.points(cdaRes, col = c("green", "orange"), legend = T, breaks = seq(-6, 4, 0.2), pch = c(22, 15, 25, 21))
dataShort = delete.taxon(object = data, taxonName =  c("ph"))
object = dataShort
passiveSamples = "hybr"
objectNoPassiveSamples = object
objectWithITHPassiveSamples = object
passiveSamples = NULL
for (groupName in passiveSamples) {
if (groupName %in% object$Taxon) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Taxon", groupName)
if (groupName %in% object$Population) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Population", groupName)
}
passiveSamples = "hybr"
for (groupName in passiveSamples) {
if (groupName %in% object$Taxon) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Taxon", groupName)
if (groupName %in% object$Population) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Population", groupName)
}
removeByColumn <- function(object, column, groupName) {
# obj je triedy morfodata, skontrolovane vyssie
# groupName moze byt i viac
toRemove = array(data = NA, dim = 0)
for (name in groupName) {
toRemove = c(toRemove, which( unlist(object[column]) %in% groupName) )
}
newObject = newMorphodata()
newObject$ID = droplevels( object$ID[-toRemove] )
newObject$Population = droplevels( object$Population[-toRemove] )
newObject$Taxon = droplevels( object$Taxon[-toRemove] )
newObject$data = object$data[-toRemove, ]
return(newObject)
}
for (groupName in passiveSamples) {
if (groupName %in% object$Taxon) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Taxon", groupName)
if (groupName %in% object$Population) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Population", groupName)
}
# internal
# returns new morphodata object
newMorphodata <- function() {
newMorphodata <- list(ID = NULL, Population = NULL, Taxon = NULL, data = data.frame())
attr(newMorphodata, "class") <- "morphodata"
return(newMorphodata)
}
objectNoPassiveSamples = object
objectWithITHPassiveSamples = object
for (groupName in passiveSamples) {
if (groupName %in% object$Taxon) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Taxon", groupName)
if (groupName %in% object$Population) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Population", groupName)
}
# calculate with objectNoPassiveSamples
d = as.matrix(objectNoPassiveSamples$data)
x = lm(d ~ objectNoPassiveSamples$Taxon)
cda = candisc(x, term="objectNoPassiveSamples$Taxon")
plot(cda$scores$Can1)
cda$scores[1,2]
cda$scores[1,]
cda$scores[,1]
cda$scores[,2]
cda$coeffs.raw
scaledIndividuals = scale(data$♀data, center = T, scale = F)
scaledIndividuals = scale(data$data, center = T, scale = F)
as.matrix(scaledIndividuals[1,])
scaledIndividuals
cda$coeffs.raw
cda$coeffs.raw[,1]
coef = as.matrix(cda$coeffs.raw[,1])
ind1 = as.matrix(scaledIndividuals)
vys = ind1 %*% coef
vys
ind1
coef
ind1[1,]
ind1[1,]
coef
ind1[1,] %*% coef
cda$coeffs.raw[,1]
str(cda$coeffs.raw[,1])
str(as.data.frame(cda$coeffs.raw[,1]))
export.res(as.data.frame(cda$coeffs.raw[,1]))
cda$coeffs.raw
library(MorphoTools)
export.res(as.data.frame(cda$coeffs.raw[,1]), row.names = T )
ind1
export.res(as.data.frame(ind1[1,]), row.names = T )
coef
ind1[1,] %*% coef
ind1[1,]
coef = as.matrix(cda$coeffs.raw[,2])
cda$coeffs.raw[,2]
cda$coeffs.raw[,]
cda$coeffs.raw
d = as.matrix(data$data)
x = lm(d ~ data$Taxon)
cda = candisc(x, term="data$Taxon")
scaledIndividuals
cda$coeffs.raw
coef = as.matrix(cda$coeffs.raw)
coef
coef[1,]
coef[,1]
ind1[1,] %*% coef[,1]
cda$coeffs.raw
cda$coeffs.raw[,1]
export.res(as.data.frame(cda$coeffs.raw), row.names = T )
export.res(as.data.frame(ind1[1,]), row.names = T )
ind1[1,] %*% coef[,1]
ind1[1,] %*% coef[,2]
ind1[1,] %*% coef[,3]
ind1[1,] %*% coef
ind1
ind1 %*% coef
ind1[2,]
ind1[2,] %*% coef
cda$rank
# calculate with objectNoPassiveSamples
d = as.matrix(objectNoPassiveSamples$data)
x = lm(d ~ objectNoPassiveSamples$Taxon)
cda = candisc(x, term="objectNoPassiveSamples$Taxon")
cda$rank
cda$eigenvalues
cda$pct
cda$means
cda$coeffs.raw
cda$coeffs.std
cda$structure
cda$means
ind1
scaledIndividuals
objectWithITHPassiveSamples.scaled = as.matrix( scale(objectWithITHPassiveSamples$data, center = T, scale = F) )
objectWithITHPassiveSamples.scaled
cda$coeffs.raw
as.matrix(cda$coeffs.raw)
objectWithITHPassiveSamples.scaled[1,] %*% cda$coeffs.raw
objectWithITHPassiveSamples.scaled$scores =
export.res(as.data.frame(cda$coeffs.raw), row.names = T )
export.res(as.data.frame(objectWithITHPassiveSamples.scaled[1,]), row.names = T )
objectWithITHPassiveSamples.scaled[1,]
objectWithITHPassiveSamples.scaled
objectWithITHPassiveSamples.scaled = as.matrix( scale(objectWithITHPassiveSamples$data, center = T, scale = F) )
objectWithITHPassiveSamples.scaled
objectWithITHPassiveSamples.scaled[1,]
export.res(as.data.frame(objectWithITHPassiveSamples.scaled[1,]), row.names = T )
objectWithITHPassiveSamples.scaled[1,] %*% cda$coeffs.raw
objectWithITHPassiveSamples.scaled %*% cda$coeffs.raw
objectWithITHPassiveSamples.scaled
scale(objectWithPassiveSamples$data, center = T, scale = F)
objectWithPassiveSamples = object
scale(objectWithPassiveSamples$data, center = T, scale = F)
scale(objectWithPassiveSamples$data, center = T, scale = F) %*% cda$coeffs.raw
groupMeans
cdaResult$groupMeans
cda$means
cda$scores
cda$means
export.res(cda$scores)
d = as.matrix(data$data)
x = lm(d ~ data$Taxon)
cda = candisc(x, term="data$Taxon")
cda$means
export.res(cda$scores)
export.res(cda$scores, file = "./aa.txt")
# predict na zaklade plnej matice
cdaResult$objects$scores = scale(objectWithPassiveSamples$data, center = T, scale = F) %*% cda$coeffs.raw
# internal
# returns new pcadata object
newCdadata <- function() {
newCdadata <- list(
axesVariance = numeric(),
cumulativeAxesVariance = numeric(),
groupMeans = data.frame(),
coeffs.raw = matrix(),
coeffs.std = matrix(),
totalCanonicalStructure = matrix(),
objects = list(
ID = factor(),
Population = factor(),
Taxon = factor(),
scores = data.frame()),
rank = numeric(),
eigenValues = numeric(),
canrsq = numeric()
)
attr(newCdadata, "class") <- "cdadata"
return(newCdadata)
}
objectNoPassiveSamples = object
objectWithPassiveSamples = object
for (groupName in passiveSamples) {
if (groupName %in% object$Taxon) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Taxon", groupName)
if (groupName %in% object$Population) objectNoPassiveSamples = removeByColumn(objectNoPassiveSamples, "Population", groupName)
}
# calculate with objectNoPassiveSamples
d = as.matrix(objectNoPassiveSamples$data)
x = lm(d ~ objectNoPassiveSamples$Taxon)
cda = candisc(x, term="objectNoPassiveSamples$Taxon")
cdaResult = newCdadata()
cdaResult$rank = cda$rank
cdaResult$eigenValues = cda$eigenvalues
cdaResult$canrsq = cda$canrsq
cdaResult$axesVariance = cda$pct
for (i in cdaResult$rank:1) {
cdaResult$cumulativeAxesVariance[i] = sum(cdaResult$axesVariance[1:i])
}
cdaResult$coeffs.raw = cda$coeffs.raw
cdaResult$coeffs.std = cda$coeffs.std
cdaResult$totalCanonicalStructure = cda$structure
cdaResult$objects$ID = object$ID
cdaResult$objects$Population = object$Population
cdaResult$objects$Taxon = object$Taxon
# predict na zaklade plnej matice
cdaResult$objects$scores = scale(objectWithPassiveSamples$data, center = T, scale = F) %*% cda$coeffs.raw
dim(cdaResult$objects$scores)
length(cdaResult$objects$ID)
length(cdaResult$objects$Taxon)
length(cdaResult$objects$Population)
aggregate(cdaResult$objects$scores,by=cdaResult$objects$Taxon,mean)
aggregate(cdaResult$objects$scores, by = list("Taxon" = cdaResult$objects$Taxon), mean)
str(aggregate(cdaResult$objects$scores, by = list("Taxon" = cdaResult$objects$Taxon), mean))
cda$means
plot.points(cdaResult, pt.bg = c("green", "red", "navy", "orange"), col = c("black", "red", "black", "red"),  legend = F, pch = c(22, 15, 25, 21))
source('C:/Users/mslen/source/Git/MorphoTools/R/cda.calc.R')
a[1]
a = 1
a[1]
a[2]
a[2] = 2
a[4] = 6
a
a = "1"
a[4]
a[4] = "ds"
a
library("MorphoTools", lib.loc="~/R/win-library/3.6")
