% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/labels.characters.R, R/labels.points.R,
%   R/pca.calc.R, R/plot.3D.R, R/plot.characters.R, R/plot.points.R
\name{labels.characters.pcadata}
\alias{labels.characters.pcadata}
\alias{labels.points.pcadata}
\alias{pca.calc}
\alias{plot.3D.pcadata}
\alias{plot.characters.pcadata}
\alias{plot.points.pcadata}
\title{Principal component analysis (PCA)}
\usage{
pca.calc(object)

## S3 method for class 'pcadata'
plot.points(pcaResult, axes = c(1,2), pch = 16, col = "black", labels = FALSE, legend = FALSE, legend.pos = "topright", ncol = 1, ...)

## S3 method for class 'pcadata'
plot.3D(pcaResult, axes = c(1,2,3), pch = 16, col = "black", ???? ?????? ??????????????????? ?????????????????????????? labels = FALSE ????????????????????????????????????????? , legend = FALSE, legend.pos = "topright", ncol = 1, ...)

## S3 method for class 'pcadata'
plot.characters(pcaResult, axes = c(1,2), col = "red", length = 0.1, xlim = c(-1,1), ylim = c(-1,1), labels = TRUE. ...)

## S3 method for class 'pcadata'
labels.points(pcaResult, axes = c(1,2), ...)

\method{plot.3D}{pcadata}(
  pcaResult,
  axes = c(1, 2, 3),
  xlab = NULL,
  ylab = NULL,
  zlab = NULL,
  pch = 16,
  col = "black",
  pt.bg = "white",
  phi = 10,
  theta = 2,
  ticktype = "detailed",
  bty = "u",
  type = "n",
  labels = FALSE,
  legend = FALSE,
  legend.pos = "topright",
  ncol = 1,
  ...
)

\method{plot.characters}{pcadata}(
  pcaResult,
  axes = c(1, 2),
  xlab = NULL,
  ylab = NULL,
  col = "red",
  length = 0.1,
  labels = TRUE,
  ...
)

\method{plot.points}{pcadata}(
  pcaResult,
  axes = c(1, 2),
  xlab = NULL,
  ylab = NULL,
  pch = 16,
  col = "black",
  pt.bg = "white",
  labels = FALSE,
  legend = FALSE,
  legend.pos = "topright",
  ncol = 1,
  ...
)
}
\arguments{
\item{pcaResult}{object of class 'pcadata'.}

\item{axes}{x, y axes of plot.}

\item{...}{further arguments to be passed to \code{\link{plot.default}}, \code{\link{text}}, \code{\link{arrows}} or other graphical parameters in \code{\link{par}}.}

\item{object}{an object of class 'morphodata'.}

\item{pch}{a vector of plotting characters or symbols: see \code{\link{points}}.}

\item{col}{the colors for points. Multiple colors can be specified so that each Taxon can be given its own color. If there are fewer colors than points they are recycled in the standard fashion.}

\item{labels}{logical, defines if labels are displayed. Only restricted number of parameters are supported. For more precise labels ploting, use \code{\link{labels.points}} directly.}

\item{legend}{logical, defines if legend is displayed. Only restricted number of legend parameters are supported. For more precise legend ploting, use \code{\link{plot.legend}} directly.}

\item{legend.pos}{the x and y co-ordinates or a single keyword from the list "bottomright", "bottom", "bottomleft", "left", "topleft", "top", "topright", "right", and "center", to be used to position the legend.}

\item{ncol}{the number of columns in which to set the legend items (default is 1, a vertical legend).}

\item{length}{length of the edges of the arrow head (in inches).}
}
\value{
object of class 'pcadata' containing the following components:

\item{sdev}{the standard deviations of the principal components (i.e., the square roots of the eigenvalues). }
\item{center, scale}{the centering and scaling used, or FALSE.}
\item{objects}{containing ID, Population, Taxon, and ordination scores of cases (objects, OTUs), centred and scaled.}
\item{eigenVectors}{matrix of eigenvectors (i.e., a matrix of characters loadings).}
\item{eigenValues}{eigenvalues of principal components.}
\item{axesVariance}{eigenvalues as percent. }
\item{cumulativeAxesVariance}{cumulative percentage of eigenvalues. }
}
\description{
This function performs principal component analysis.
}
\details{

}
\examples{
pcaResult = pca.calc(myMorphoData)

plot.points(pcaRes, axes = c(1,2), col = c("red", "green", "blue", "red"), pch = c(20, 17, 8, 21), bg = "orange", legend = T, legend.pos = "bottomright", ncol = 2)
plot.points(pcaRes, main = "My PCA plot", frame.plot = F, cex = 0.8)

plot.3D(_________________________________________________________________)

plot.characters(pcaRes, axes = c(1,2))

labels.points(pcaRes, axes = c(1,2), cex = 0.8, col = "red", pos = 4, offset = 0.4)

}
